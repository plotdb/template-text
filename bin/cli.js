#!/usr/bin/env node
// Generated by LiveScript 1.3.1
var fs, yargs, LiveScript, tt, argv, input, output, cfgFile, requireModule, code, cfg, ret;
fs = require('fs');
yargs = require('yargs');
LiveScript = require('LiveScript');
tt = require("./index");
argv = yargs.option('config', {
  alias: 'c',
  description: "config json file used to interpolate.",
  type: 'string'
}).option('require', {
  alias: 'r',
  description: "require module as config."
}).option('output', {
  alias: 'o',
  description: "output file name. print to stdout if omitted",
  type: 'string'
}).help().alias('help', 'h').check(function(argv, options){
  if (!argv._[0] || !fs.existsSync(argv._[0])) {
    throw new Error("input file missing");
  }
  if (argv.r && argv.c) {
    throw new Error("only one of require and config option could be specified.");
  }
  return true;
}).argv;
input = argv._[0];
output = argv.o;
cfgFile = argv.c;
requireModule = argv.r;
if (cfgFile) {
  code = fs.readFileSync(cfgFile).toString();
  if (/\.ls(on)?$/.exec(cfgFile)) {
    cfg = eval(LiveScript.compile(code, {
      bare: true,
      json: true,
      header: false
    }));
  } else {
    cfg = JSON.parse(code);
  }
} else if (requireModule) {
  cfg = LiveScript.run("return require('" + requireModule + "')");
} else {
  cfg = {};
}
ret = tt(fs.readFileSync(input).toString(), cfg);
if (output) {
  fs.writeFileSync(output, ret);
} else {
  console.log(ret);
}
